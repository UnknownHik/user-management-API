networks:
  postgresql:

volumes:
  db_data:

############################
# Services - User-management
############################
services:
  user-management:
    restart: unless-stopped # Перезапускать в случае сбоя
    env_file:
      - .env
    build:
      context: ./
    ports:
     - 8080:8080
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable
    volumes:
      - ./logs:/var/log/user-management  # Том для логов
    networks:
      - postgresql
    depends_on:
      db:
        condition: service_healthy
    stop_grace_period: 10s  # Graceful shutdown time (10 seconds)

#######################
# Database - Postgresql
#######################
  db:
    container_name: db
    image: postgres:17
    restart: always  # Перезапускать в случае сбоя
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:?Please configure DB_USER in the .env file}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?Please configure DB_PASSWORD in the .env file}
      POSTGRES_DB: ${DB_NAME:?Please configure DB_NAME in the .env file}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - postgresql

#############################
# Migrations - Golang-migrate
#############################
  migrations:
    image: migrate/migrate
    container_name: 'migrations'
    restart: on-failure  # Перезапускать только в случае ошибки
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable
    volumes:
        - ./migrations:/migrations
    command: [
        "-path", "/migrations",
        "-database", "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "up"
      ]
    networks:
      - postgresql